#include "pci_codes.h"

const PciClassCodeEntry PciClassCodeTable[] = {
    {0x00, 0x00, 0x00, "Non-VGA", "Unclassified device"},
    {0x00, 0x01, 0x00, "Non-VGA", "VGA-compatible"},
    
    {0x01, 0x00, 0x00, "Mass Storage", "SCSI Bus Controller"},
    {0x01, 0x01, 0x00, "Mass Storage", "IDE Controller"},
    {0x01, 0x02, 0x00, "Mass Storage", "Floppy Disk Controller"},
    {0x01, 0x03, 0x00, "Mass Storage", "IPI Bus Controller"},
    {0x01, 0x04, 0x00, "Mass Storage", "RAID Controller"},
    {0x01, 0x05, 0x00, "Mass Storage", "ATA Controller"},
    {0x01, 0x06, 0x00, "Mass Storage", "SATA Controller"},
    {0x01, 0x07, 0x00, "Mass Storage", "Serial Attached SCSI"},
    {0x01, 0x08, 0x00, "Mass Storage", "Non-Volatile Memory"},
    
    {0x02, 0x00, 0x00, "Network", "Ethernet Controller"},
    {0x02, 0x01, 0x00, "Network", "Token Ring Controller"},
    {0x02, 0x02, 0x00, "Network", "FDDI Controller"},
    {0x02, 0x03, 0x00, "Network", "ATM Controller"},
    {0x02, 0x04, 0x00, "Network", "ISDN Controller"},
    {0x02, 0x05, 0x00, "Network", "WorldFip Controller"},
    {0x02, 0x80, 0x00, "Network", "Other Network Controller"},
    
    {0x03, 0x00, 0x00, "Display", "VGA Compatible Controller"},
    {0x03, 0x01, 0x00, "Display", "XGA Controller"},
    {0x03, 0x02, 0x00, "Display", "3D Controller"},
    {0x03, 0x80, 0x00, "Display", "Other Display Controller"},
    
    {0x04, 0x00, 0x00, "Multimedia", "Multimedia Video Controller"},
    {0x04, 0x01, 0x00, "Multimedia", "Multimedia Audio Controller"},
    {0x04, 0x02, 0x00, "Multimedia", "Computer Telephony Device"},
    {0x04, 0x03, 0x00, "Multimedia", "Audio Device"},
    {0x04, 0x80, 0x00, "Multimedia", "Other Multimedia Device"},
    
    {0x05, 0x00, 0x00, "Memory", "RAM Controller"},
    {0x05, 0x01, 0x00, "Memory", "Flash Controller"},
    {0x05, 0x80, 0x00, "Memory", "Other Memory Controller"},
    
    {0x06, 0x00, 0x00, "Bridge", "Host Bridge"},
    {0x06, 0x01, 0x00, "Bridge", "ISA Bridge"},
    {0x06, 0x02, 0x00, "Bridge", "EISA Bridge"},
    {0x06, 0x03, 0x00, "Bridge", "MCA Bridge"},
    {0x06, 0x04, 0x00, "Bridge", "PCI-to-PCI Bridge"},
    {0x06, 0x05, 0x00, "Bridge", "PCMCIA Bridge"},
    {0x06, 0x06, 0x00, "Bridge", "NuBus Bridge"},
    {0x06, 0x07, 0x00, "Bridge", "CardBus Bridge"},
    {0x06, 0x08, 0x00, "Bridge", "RACEway Bridge"},
    {0x06, 0x09, 0x00, "Bridge", "PCI-to-PCI Bridge"},
    {0x06, 0x0a, 0x00, "Bridge", "InfiniBand-to-PCI Host Bridge"},
    {0x06, 0x80, 0x00, "Bridge", "Other Bridge"},
    
    {0x07, 0x00, 0x00, "Communication", "Serial Controller"},
    {0x07, 0x01, 0x00, "Communication", "Parallel Controller"},
    {0x07, 0x02, 0x00, "Communication", "Multiport Serial Controller"},
    {0x07, 0x03, 0x00, "Communication", "Modem"},
    {0x07, 0x04, 0x00, "Communication", "IEEE 488.1/2 Controller"},
    {0x07, 0x05, 0x00, "Communication", "Smart Card"},
    {0x07, 0x80, 0x00, "Communication", "Other Communication Device"},
    
    {0x08, 0x00, 0x00, "System", "PIC"},
    {0x08, 0x01, 0x00, "System", "DMA Controller"},
    {0x08, 0x02, 0x00, "System", "Timer"},
    {0x08, 0x03, 0x00, "System", "RTC"},
    {0x08, 0x04, 0x00, "System", "PCI Hot-plug Controller"},
    {0x08, 0x05, 0x00, "System", "SD Host Controller"},
    {0x08, 0x06, 0x00, "System", "IOMMU"},
    {0x08, 0x80, 0x00, "System", "Other System Device"},
    
    {0x09, 0x00, 0x00, "Input", "Keyboard Controller"},
    {0x09, 0x01, 0x00, "Input", "Digitizer"},
    {0x09, 0x02, 0x00, "Input", "Mouse Controller"},
    {0x09, 0x03, 0x00, "Input", "Scanner Controller"},
    {0x09, 0x04, 0x00, "Input", "Gameport Controller"},
    {0x09, 0x80, 0x00, "Input", "Other Input Device"},
    
    {0x0a, 0x00, 0x00, "Docking", "Generic Docking Station"},
    {0x0a, 0x80, 0x00, "Docking", "Other Docking Station"},
    
    {0x0b, 0x00, 0x00, "Processor", "386"},
    {0x0b, 0x01, 0x00, "Processor", "486"},
    {0x0b, 0x02, 0x00, "Processor", "Pentium"},
    {0x0b, 0x10, 0x00, "Processor", "Alpha"},
    {0x0b, 0x20, 0x00, "Processor", "PowerPC"},
    {0x0b, 0x30, 0x00, "Processor", "MIPS"},
    {0x0b, 0x40, 0x00, "Processor", "Co-Processor"},
    {0x0b, 0x80, 0x00, "Processor", "Other Processor"},
    
    {0x0c, 0x00, 0x00, "Serial Bus", "FireWire (IEEE 1394)"},
    {0x0c, 0x01, 0x00, "Serial Bus", "ACCESS Bus"},
    {0x0c, 0x02, 0x00, "Serial Bus", "SSA"},
    {0x0c, 0x03, 0x00, "Serial Bus", "USB Controller"},
    {0x0c, 0x04, 0x00, "Serial Bus", "Fibre Channel"},
    {0x0c, 0x05, 0x00, "Serial Bus", "SMBus"},
    {0x0c, 0x06, 0x00, "Serial Bus", "InfiniBand"},
    {0x0c, 0x07, 0x00, "Serial Bus", "IPMI SMIC"},
    {0x0c, 0x08, 0x00, "Serial Bus", "SERCOS"},
    {0x0c, 0x09, 0x00, "Serial Bus", "CANbus"},
    {0x0c, 0x80, 0x00, "Serial Bus", "Other Serial Bus"},
    
    {0x0d, 0x00, 0x00, "Wireless", "iRDA Compatible Controller"},
    {0x0d, 0x01, 0x00, "Wireless", "Consumer IR Controller"},
    {0x0d, 0x10, 0x00, "Wireless", "RF Controller"},
    {0x0d, 0x11, 0x00, "Wireless", "Bluetooth"},
    {0x0d, 0x12, 0x00, "Wireless", "Broadband"},
    {0x0d, 0x20, 0x00, "Wireless", "Ethernet (802.11a)"},
    {0x0d, 0x21, 0x00, "Wireless", "Ethernet (802.11b)"},
    {0x0d, 0x80, 0x00, "Wireless", "Other Wireless Controller"},
    
    {0x0e, 0x00, 0x00, "Intelligent", "I2O"},
    {0x0e, 0x80, 0x00, "Intelligent", "Other Intelligent Controller"},
    
    {0x0f, 0x01, 0x00, "Satellite", "TV Controller"},
    {0x0f, 0x02, 0x00, "Satellite", "Audio Controller"},
    {0x0f, 0x03, 0x00, "Satellite", "Voice Controller"},
    {0x0f, 0x04, 0x00, "Satellite", "Data Controller"},
    {0x0f, 0x80, 0x00, "Satellite", "Other Satellite Communication"},
    
    {0x10, 0x00, 0x00, "Encryption", "Network and Computing"},
    {0x10, 0x10, 0x00, "Encryption", "Entertainment"},
    {0x10, 0x80, 0x00, "Encryption", "Other Encryption"},
    
    {0x11, 0x00, 0x00, "Signal Processing", "DPIO Modules"},
    {0x11, 0x01, 0x00, "Signal Processing", "Performance Counters"},
    {0x11, 0x10, 0x00, "Signal Processing", "Communication Synchronizer"},
    {0x11, 0x20, 0x00, "Signal Processing", "Signal Processing Management"},
    {0x11, 0x80, 0x00, "Signal Processing", "Other Signal Processing"},
    
    {0x12, 0x00, 0x00, "Processing Accelerator", "Processing Accelerator"},
    
    {0x13, 0x00, 0x00, "Non-Essential Instrumentation", "Non-Essential Instrumentation"},
    
    {0x40, 0x00, 0x00, "Co-Processor", "Co-Processor"},
    
    {0xff, 0x00, 0x00, "Unassigned", "Unassigned Class"}
};

const int PciClassCodeTableLen = sizeof(PciClassCodeTable) / sizeof(PciClassCodeEntry);
